# vim: set fileencoding=UTF-8 :
# vim:filetype=python

import os
import process_upstream as pu

Import('*')

for experiment, config in experiments.iteritems():
    env.Command(
            source=config['basins_rast'].format(ver='', ext='tif'),
            target=config['zeros_rast'],
            action=pu.make_rast_val,
            val=0.0)
    env.Command(
            source=config['basins_rast'].format(ver='', ext='tif'),
            target=config['ones_rast'],
            action=pu.make_rast_val,
            val=1.0)

    env.Command(
            source=config['basin_ids'],
            target=config['upstream_zeros'],
            action=pu.set_upstream_val,
            val=0.0)

    env.Command(
            source=config['basin_ids'],
            target=config['upstream_ones'],
            action=pu.set_upstream_val,
            val=1.0)

    env.Command(
            source=[config['basins_rast'].format(ver='', ext='tif'),
                    config['basin_ids'],
                    config['basin_pixel_areas']],
            target=config['basin_areas'],
            action=pu.agg_over_basins,
            method='sum')

    env.Command(
            source=[config['basins_rast'].format(ver='', ext='tif'),
                    config['basin_ids'],
                    config['airtemp_rast'].format(ver='', ext='tif'),
                    config['basin_pixel_areas']],
            target=config['airtemp'].format(ver=''),
            action=pu.agg_over_basins,
            method='weightedmean')

    env.Command(
            source=[config['basins_rast'].format(ver='', ext='tif'),
                    config['basin_ids'],
                    config['relief_rast'].format(ver='', ext='tif')],
            target=config['relief'].format(ver='.1'),
            action=pu.agg_over_basins,
            method='max')

    env.Command(
            source=config['relief'].format(ver='.1', ext='pd'),
            target=config['relief'].format(ver='.2'),
            action=pu.convert_m_to_km)

    env.Command(
            source=config['relief'].format(ver='.2', ext='pd'),
            target=config['relief'].format(ver=''),
            action=pu.clip_neg_to_zero)

    env.Command(
            source=[config['discharge_rast'].format(ver='', ext='tif'),
                    config['basin_mouths']],
            target=config['discharge'].format(ver=''),
            action=pu.discharge_at_mouths)

    env.Command(
            source=[config['basins_rast'].format(ver='', ext='tif'),
                    config['basin_ids'],
                    config['ice_rast'].format(ver='', ext='tif'),
                    config['basin_pixel_areas']],
            target=config['ice'].format(ver=''),
            action=pu.agg_over_basins,
            method='weightedmean',
            fill=0)

    env.Command(
            source=[config['basins_rast'].format(ver='', ext='tif'),
                    config['basin_ids'],
                    config['lithology_rast'].format(ver='', ext='tif'),
                    config['basin_pixel_areas']],
            target=config['lithology'].format(ver=''),
            action=pu.agg_over_basins,
            method='weightedmean',
            fill='mean')

    env.Command(
            source=[config['basins_rast'].format(ver='', ext='tif'),
                    config['basin_ids'],
                    config['per_capita_gdp_rast'].format(ver='', ext='tif'),
                    config['basin_pixel_areas']],
            target=config['per_capita_gdp'].format(ver=''),
            action=pu.agg_over_basins,
            method='weightedmean',
            fill='mean')

    for year in years:
        env.Command(
                source=[config['basins_rast'].format(ver='', ext='tif'),
                        config['basin_ids'],
                        config['pop_dens_rast'].format(year=year, ver='', ext='tif'),
                        config['basin_pixel_areas']],
                target=config['pop_dens'].format(year=year, ver=''),
                action=pu.agg_over_basins,
                method='weightedmean',
                fill='mean')
