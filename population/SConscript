# vim: set fileencoding=UTF-8 :
# vim:filetype=python

import os
import process_population as pp
import gis

Import('*')

for experiment, config in experiments.iteritems():
    if config['pop_dens_source'][0] == 'gpwv4':
        env.Command(
                source=[config['deltas'],
                        config['pop_dens_source'][1]],
                target=config['delta_pop_dens'].format(ver=''),
                action=gis.delta_zonal_stats)

        env.Command(
                source=[config['basins_rast'].format(ver='', ext='tif'),
                        config['pop_dens_source'][1]],
                target=config['pop_dens_rast'].format(ver='', ext='tif'),
                action=gis.regrid_to_raster,
                method='average')

        elev_files = []
        for delta in common['deltas']:
            env.Command(
                    source=[config['delta_map'].format(delta=delta),
                            config['pop_dens_source'][1]],
                    target=config['delta_pop_rast'].format(delta=delta),
                    action=pp.clip_pop_to_delta)

            env.Command(
                    source=[config['delta_map'].format(delta=delta),
                            config['delta_srtm_rast'].format(delta=delta, srtm=config['srtm']),
                            config['delta_pop_rast'].format(delta=delta)],
                    target=config['delta_pop_hypso'].format(delta=delta),
                    action=pp.pop_elevation_bins,
                    delta=delta)
            elev_files.append(config['delta_pop_hypso'].format(delta=delta))

            env.Command(
                    source=config['delta_pop_hypso'].format(delta=delta),
                    target=config['hypso_plot'].format(delta=delta),
                    action=pp.plot_hypsometric,
                    delta=delta)

        env.Command(
                source=elev_files,
                target=config['pop_hypso'],
                action=pp.group_delta_pop_elevations,
                deltas=common['deltas'])

    if config['pop_growth_source'][0] == 'un':
        env.Command(
                source=None,
                target=config['pop_growth_data'],
                action='wget "'+config['pop_growth_source'][1]+'" -O $TARGET')

        env.Command(
                source=[config['pop_hypso'],
                        config['delta_countries'],
                        config['pop_growth_data']],
                target=config['pop_hypso_growth'],
                action=pp.forecast_un_pop_elev,
                popyear=common['popyear'],
                forecasts=common['un_pop_forecasts'],
                pop_scenario_names=common['un_pop_names'])

    # elif config['pop_growth_source'][0] == 'ssp':
        # ssp_pop_rasts = [config['ssp_pop'].format(ssp=ssp, ext='tif') for ssp in common['ssps']]
        # env.Command(
                # source=([config['pop_hypso'],
                        # config['basins_rast'].format(ver='', ext='tif'),
                        # config['basin_ids']]+
                        # ssp_pop_rasts),
                # target=config['pop_hypso_growth'],
                # action=pp.forecast_ssp_pop_elev,
                # popyear=common['popyear'],
                # ssps=common['ssps'],
                # forecasts=common['ssp_pop_forecasts'],
                # pop_scenario_names=common['ssp_pop_names'])

    env.Command(
            source=[config['pop_hypso_growth'],
                    config['rslr']],
            target=config['pop_hypso_growth_rslr'],
            action=pp.adjust_hypso_for_rslr,
            elevyear=common['elevyear'])

    # SSPs
    for ssp in common['ssps']:
        env.Command(
                source=[config['basins_rast'].format(ver='', ext='tif'),
                        config['basin_ids'],
                        config['ssp_pop_source'][1].format(ssp=ssp)],
                target=config['ssp_pop'].format(ssp=ssp, ext='tif'),
                action=pp.rasterize_ssp_data,
                scaling=1e6,
                ssp_years=common['ssp_forecasts'])

        env.Command(
                source=[config['basins_rast'].format(ver='', ext='tif'),
                        config['basin_ids'],
                        config['ssp_gdp_source'][1].format(ssp=ssp)],
                target=config['ssp_gdp'].format(ssp=ssp, ext='tif'),
                action=pp.rasterize_ssp_data,
                scaling=1e9,
                ssp_years=common['ssp_forecasts'])
    ssp_pop_rasts = [config['ssp_pop'].format(ssp=ssp, ext='tif') for ssp in common['ssps']]
    env.Command(
            source=([config['deltas']]+
                     ssp_pop_rasts),
            target=config['delta_ssp_pops'],
            action=pp.extract_delta_ssp_vals,
            ssps=common['ssps'],
            ssp_years=common['ssp_forecasts'])
    ssp_gdp_rasts = [config['ssp_gdp'].format(ssp=ssp, ext='tif') for ssp in common['ssps']]
    env.Command(
            source=([config['deltas']]+
                     ssp_pop_rasts),
            target=config['delta_ssp_gdps'],
            action=pp.extract_delta_ssp_vals,
            ssps=common['ssps'],
            ssp_years=common['ssp_forecasts'])
