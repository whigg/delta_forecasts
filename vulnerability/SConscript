# vim: set fileencoding=UTF-8 :
# vim:filetype=python

import os
import process_vuln as pv

Import('*')

for experiment, config in experiments.iteritems():
    if config['vuln_source'][0] == 'tessler2015':
        env.Command(
                source=[config['vuln_source'][1],
                        config['delta_zeros']],
                target=config['vuln'],
                action=pv.import_idi_vuln,
                colname='InvestmentDeficitIndex')
    else:
        raise NotImplementedError

    if config['governance_source'][0] == 'tessler2015':
        env.Command(
                source=[config['governance_source'][1],
                        config['delta_zeros']],
                target=config['governance'],
                action=pv.import_idi_vuln,
                colname='WGI_governance_GovernmentEffectiveness_delta')
    elif config['governance_source'][0] == 'worldwide_gov_indicators':
        env.Command(
                source=[config['governance_source'][1],
                        config['delta_countries'],
                        config['delta_zeros']],
                target=config['governance'],
                action=pv.import_wgi)
    else:
        raise NotImplementedError

    if config['energy_cost_source'][0] in ['eia_outlook_2017']:
        myCommand(
                source=config['energy_cost_source'][1],
                target=config['energy_cost_index_data'],
                action=pv.extract_energy_cost_index_from_eia_outlook,
                key=config['energy_cost_index_key'])

    if 'energy_cost' in config['vuln_adjustments']:
        env.Command(
                source=[config['delta_ssp_gdps'],
                        config['delta_ssp_percap_gdps'],
                        config['energy_cost_index_data']],
                target=[config['delta_ssp_gdps_adj'],
                        config['delta_ssp_percap_gdps_adj']],
                action=pv.adj_gdp_for_energy_prices)
    else:
        env.Command(
                source=config['delta_ssp_gdps'],
                target=config['delta_ssp_gdps_adj'],
                action='cp $SOURCE $TARGET')
        env.Command(
                source=config['delta_ssp_percap_gdps'],
                target=config['delta_ssp_percap_gdps_adj'],
                action='cp $SOURCE $TARGET')

    if config['vuln_norm'] == 'unity':
        env.Command(
                source=[config['delta_ssp_gdps'],
                        config['delta_ssp_percap_gdps'],
                        config['delta_ssp_gdps'],
                        config['delta_ssp_percap_gdps']],
                target=[config['econ_capacity'],
                        config['econ_vuln']],
                action=pv.compute_unity_norm_econ_vuln,
                ref_year=2010)
        env.Command(
                source=[config['delta_ssp_gdps_adj'],
                        config['delta_ssp_percap_gdps_adj'],
                        config['delta_ssp_gdps'],
                        config['delta_ssp_percap_gdps']],
                target=[config['econ_capacity_adj'],
                        config['econ_vuln_adj']],
                action=pv.compute_unity_norm_econ_vuln,
                ref_year=2010)
        env.Command(
                source=config['governance'],
                target=config['gov_norm'],
                action=pv.unity_norm_gov)
    else:
        raise NotImplementedError

    env.Command(
            source=[config['econ_capacity'],
                    config['gov_norm']],
            target=config['capacity'],
            action=pv.stack_capacity_indicators)

    env.Command(
            source=[config['econ_capacity_adj'],
                    config['gov_norm']],
            target=config['capacity_adj'],
            action=pv.stack_capacity_indicators)
